$version Generated by VerilatedVcd $end
$date Thu Mar 12 12:55:07 2020
 $end
$timescale   1ns $end

 $scope module TOP $end
  $var wire  1 4 clock $end
  $var wire 32 6 io_A [31:0] $end
  $var wire 32 7 io_B [31:0] $end
  $var wire 32 8 io_M [31:0] $end
  $var wire  1 5 reset $end
  $scope module PositMultiplier32_2 $end
   $var wire  1 ) addOne $end
   $var wire  1 ( addTwo $end
   $var wire  1 4 clock $end
   $var wire 27 # decA_fraction [26:0] $end
   $var wire  1 9 decA_isNaR $end
   $var wire  1 : decA_isZero $end
   $var wire  8 ; decA_scale [7:0] $end
   $var wire 27 $ decB_fraction [26:0] $end
   $var wire  1 < decB_isNaR $end
   $var wire  1 = decB_isZero $end
   $var wire  8 > decB_scale [7:0] $end
   $var wire 27 1 decM_fraction [26:0] $end
   $var wire  1 A decM_isNaR $end
   $var wire  1 B decM_isZero $end
   $var wire  8 3 decM_scale [7:0] $end
   $var wire  1 0 decM_sign $end
   $var wire  3 * expBias [2:0] $end
   $var wire 55 + frac [54:0] $end
   $var wire 28 2 grsTmp [27:0] $end
   $var wire  2 ' head2 [1:0] $end
   $var wire 32 6 io_A [31:0] $end
   $var wire 32 7 io_B [31:0] $end
   $var wire 32 8 io_M [31:0] $end
   $var wire  9 - mulScale [8:0] $end
   $var wire  1 / overflow $end
   $var wire  1 5 reset $end
   $var wire 29 ? sigA [28:0] $end
   $var wire 29 @ sigB [28:0] $end
   $var wire 58 % sigP [57:0] $end
   $var wire  1 . underflow $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b000000000000000000000000000 #
b000000000000000000000000000 $
b0001000000000000000000000000000000000000000000000000000000 %
b00 '
0(
0)
b000 *
b0000000000000000000000000000000000000000000000000000000 +
b100001000 -
1.
0/
00
b000000000000000000000000000 1
b0000000000000000000000000000 2
b10001000 3
04
15
b00000000000000000000000000000000 6
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
09
1:
b10000100 ;
0<
1=
b10000100 >
b01000000000000000000000000000 ?
b01000000000000000000000000000 @
0A
1B
#1
14
#2
04
#3
14
#4
04
#5
14
#6
04
#7
14
#8
04
#9
14
#10
b1110000000000000000000000000000000000000000000000000000000 %
b11 '
b111111111 -
0.
10
b11111111 3
04
05
b11000000000000000000000000000000 6
b01000000000000000000000000000000 7
b11000000000000000000000000000000 8
0:
b11111111 ;
0=
b00000000 >
b10000000000000000000000000000 ?
0B
#11
14
#12
b0100000000000000000000000000000000000000000000000000000000 %
b01 '
1(
b010 *
b000000000 -
00
b00000000 3
04
b11000000000000000000000000000000 7
b01000000000000000000000000000000 8
b11111111 >
b10000000000000000000000000000 @
#13
14
#14
b001100000000000000000000000 #
b110110000000000000000000000 $
b1110101000001000000000000000000000000000000000000000000000 %
b11 '
0(
b000 *
b1010000010000000000000000000000000000000000000000000000 +
b000000111 -
10
b101000001000000000000000000 1
b00000111 3
04
b01011001100000000000000000000000 6
b10011111011000000000000000000000 7
b10010010100000100000000000000000 8
b00000011 ;
b00000100 >
b01001100000000000000000000000 ?
b10110110000000000000000000000 @
#15
14
#16
b001110001000011000000000000 #
b110000100000000000000000000 $
b0010001001010101101110001100000000000000000000000000000000 %
b00 '
1)
b001 *
b0001001010101101110001100000000000000000000000000000000 +
b000010101 -
00
b000100101010110111000110000 1
b00010101 3
04
b01111001001110001000011000000000 6
b01101111000010000000000000000000 7
b01111110010001001010101101110010 8
b00001101 ;
b00000111 >
b01001110001000011000000000000 ?
b01110000100000000000000000000 @
#17
14
#18
b000000000000000000000000000 #
b000000000000000000000000000 $
b0100000000000000000000000000000000000000000000000000000000 %
b01 '
1(
0)
b010 *
b0000000000000000000000000000000000000000000000000000000 +
b111111000 -
b000000000000000000000000000 1
b11111000 3
04
b11011000000000000000000000000000 6
b11100100000000000000000000000000 7
b00010000000000000000000000000000 8
b11111100 ;
b11111010 >
b10000000000000000000000000000 ?
b10000000000000000000000000000 @
#19
14
#20
b110111100000000000000000000 #
b100010001000000000000000000 $
b1110010000110101111100000000000000000000000000000000000000 %
b11 '
0(
b000 *
b0100001101011111000000000000000000000000000000000000000 +
b000001011 -
10
b010000110101111100000000000 1
b00001011 3
04
b10011011011110000000000000000000 6
b01101010001000100000000000000000 7
b10001000100001101011111000000000 8
b00000101 ;
b00000110 >
b10110111100000000000000000000 ?
b01100010001000000000000000000 @
#21
14
#22
b000000000000000000000000000 #
b000000000000000000000000000 $
b1110000000000000000000000000000000000000000000000000000000 %
b0000000000000000000000000000000000000000000000000000000 +
b111111111 -
b000000000000000000000000000 1
b11111111 3
04
b10000000000000000000000000000000 6
b00000000000000000000000000000000 7
b10000000000000000000000000000000 8
19
b01111011 ;
1=
b10000100 >
b10000000000000000000000000000 ?
b01000000000000000000000000000 @
1A
1B
#23
14
#24
b001100000000000000000000000 $
b1101101000000000000000000000000000000000000000000000000000 %
1)
b001 *
b1101000000000000000000000000000000000000000000000000000 +
b001111111 -
1/
b110100000000000000000000000 1
b01111000 3
04
b01011001100000000000000000000000 7
0=
b00000011 >
b01001100000000000000000000000 @
0B
#25
14
#26
b000000000000000000000000000 $
b0001000000000000000000000000000000000000000000000000000000 %
b00 '
0)
b000 *
b0000000000000000000000000000000000000000000000000000000 +
b011110000 -
00
b000000000000000000000000000 1
04
b01111111111111111111111111111111 6
b01111111111111111111111111111111 7
b01111111111111111111111111111111 8
09
b01111000 ;
b01111000 >
b01000000000000000000000000000 ?
b01000000000000000000000000000 @
0A
#27
14
#28
b1110000000000000000000000000000000000000000000000000000000 %
b11 '
b100001111 -
1.
0/
10
b10001000 3
04
b11111111111111111111111111111111 6
b00000000000000000000000000000001 7
b11111111111111111111111111111111 8
b10000111 ;
b10001000 >
b10000000000000000000000000000 ?
#29
14
#30
04
#31
14
#32
04
#33
14
#34
04
#35
14
#36
04
#37
14
#38
04
#39
14
